# .github/workflows/daily_report.yml

name: Generate and Deploy Daily Fund Report

on:
  # 触发工作流的事件
  workflow_dispatch: # 允许手动触发
  schedule:
    # 使用 cron 语法，在每天的 UTC 时间 22:00 执行
    # (对应北京时间第二天早上 6:00)
    - cron: '50 22 * * *' # 北京时间早上 6:50
  # 也允许在推送到 main 分支时触发，方便调试
  push:
    branches:
      - main

# 设置 Pages 服务的写入权限
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 系统作为运行环境
    steps:
      # 步骤1：获取代码
      # 把仓库里的代码下载到虚拟机上
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤2：设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # 指定 Python 版本

      # 步骤3：安装依赖库
      # 读取 requirements.txt 文件并安装所有库
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          # 安装中文字体，解决 Matplotlib（如果使用）或 Plotly 可能的乱码问题
          sudo apt-get update
          sudo apt-get install -y fonts-wqy-zenhei

      # 步骤4：运行我们的报告生成脚本
      - name: Run script to generate report
        run: python query_fund_nav.py

      # 步骤5：上传工件
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './' # 上传整个目录，因为 HTML 文件在根目录

  deploy:
    needs: build # 依赖 build 任务成功完成
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 